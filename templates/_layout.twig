{# @var craft \craft\web\twig\variables\CraftVariable #}
{# @var entry \craft\elements\Entry #}
<!DOCTYPE html>
<html lang="en">

  <head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0, viewport-fit=cover">
    <meta content="ie=edge" http-equiv="X-UA-Compatible">
    {# Calls in the SEOmatic tags, all handled through the CMS settings #}
    {% hook 'seomaticRender' %}
    {{ craft.twigpack.includeCssModule("/css/app.css") }}
    <link rel="apple-touch-icon" sizes="57x57" href="{{ siteUrl('/dist/favicon/apple-icon-57x57.png') }}">
    <link rel="apple-touch-icon" sizes="60x60" href="{{ siteUrl('/dist/favicon/apple-icon-60x60.png') }}">
    <link rel="apple-touch-icon" sizes="72x72" href="{{ siteUrl('/dist/favicon/apple-icon-72x72.png') }}">
    <link rel="apple-touch-icon" sizes="76x76" href="{{ siteUrl('/dist/favicon/apple-icon-76x76.png') }}">
    <link rel="apple-touch-icon" sizes="114x114" href="{{ siteUrl('/dist/favicon/apple-icon-114x114.png') }}">
    <link rel="apple-touch-icon" sizes="120x120" href="{{ siteUrl('/dist/favicon/apple-icon-120x120.png') }}">
    <link rel="apple-touch-icon" sizes="144x144" href="{{ siteUrl('/dist/favicon/apple-icon-144x144.png') }}">
    <link rel="apple-touch-icon" sizes="152x152" href="{{ siteUrl('/dist/favicon/apple-icon-152x152.png') }}">
    <link rel="apple-touch-icon" sizes="180x180" href="{{ siteUrl('/dist/favicon/apple-icon-180x180.png') }}">
    <link rel="icon" type="image/png" sizes="192x192"  href="{{ siteUrl('/dist/favicon/android-icon-192x192.png') }}">
    <link rel="icon" type="image/png" sizes="32x32" href="{{ siteUrl('/dist/favicon/favicon-32x32.png') }}">
    <link rel="icon" type="image/png" sizes="96x96" href="{{ siteUrl('/dist/favicon/favicon-96x96.png') }}">
    <link rel="icon" type="image/png" sizes="16x16" href="{{ siteUrl('/dist/favicon/favicon-16x16.png') }}">
    <link rel="manifest" href="{{ siteUrl('/dist/favicon/manifest.json') }}">
    <meta name="msapplication-TileColor" content="#ffffff">
    <meta name="msapplication-TileImage" content="{{ siteUrl('/dist/favicon/ms-icon-144x144.png') }}">
    <meta name="theme-color" content="#ffffff">

    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Montserrat:ital,wght@0,400;0,600;0,700;1,400&family=Noto+Serif+Nyiakeng+Puachue+Hmong&display=swap" rel="stylesheet">

    {% if craft.app.env == "production" %}
    <!-- Hotjar Tracking Code for www.oaklandca.gov -->
    <script>
        (function(h,o,t,j,a,r){
            h.hj=h.hj||function(){(h.hj.q=h.hj.q||[]).push(arguments)};
            h._hjSettings={hjid:1282651,hjsv:6};
            a=o.getElementsByTagName('head')[0];
            r=o.createElement('script');r.async=1;
            r.src=t+h._hjSettings.hjid+j+h._hjSettings.hjsv;
            a.appendChild(r);
        })(window,document,'https://static.hotjar.com/c/hotjar-','.js?sv=');
    </script>
    {% endif %}
  </head>

  {# Checks if the URI is empty and if not, adds the class of "home" to the page body. #}
  {% if not craft.app.request.segments() %}
    {% set pageClass = "home" %}
  {% endif %}

  {# Weâ€™re setting the class to overflow-x-hidden to prevent content from stretching page width on mobile views.#}
  {# Sets the navigation to the nav section entry, "Main Nav" #}
  {% set mainNav = craft.entries.section('navigation').slug('main-nav').one() %}
  <body class="font-body {{ pageClass ?? '' }}">
    <div class="page-holder overflow-x-hidden">
      {% include '_partials/_elements/_skip-to-content.twig' %}
      {% include '_partials/_elements/_nav-bar.twig' %}
      <main>
        {% include '_partials/_elements/_sitewide-alert.twig' %}
        {% block content %}
          <div class="container">
            <p>No content has been added to this layout. Please make sure to include the following in your template:</p>
            <pre class="inline-block p-4 text-white whitespace-pre-line bg-gray-800">{% verbatim %}
            {% block content %}
            {% endblock %}{% endverbatim %}</pre>
          </div>
        {% endblock %}
      </main>
      {% include '_partials/_elements/_footer.twig' %}
    </div>
    <script type="module" src="https://cdn.jsdelivr.net/gh/alpinejs/alpine@v2.x.x/dist/alpine.min.js"></script>
    <script nomodule src="https://cdn.jsdelivr.net/gh/alpinejs/alpine@v2.x.x/dist/alpine-ie11.min.js" defer></script>
    {{ craft.twigpack.includeJsModule("/js/manifest.js") }}
    {{ craft.twigpack.includeJsModule("/js/vendor.js") }}
    {{ craft.twigpack.includeJsModule("/js/app.js") }}

    {% if entry is defined %}
      {% do craft.viewCount.increment(entry.id) %}
    {% elseif event is defined %}
      {% do craft.viewCount.increment(event.id) %}
    {% elseif category is defined %}
      {% do craft.viewCount.increment(category.id) %}
    {% endif %}

    {% set page = entry ?? null %}
    {% if craft.app.env == "production" %}
      {% for department in craft.entries.section("departments").type("departments").departmentCodeSnippet(":notempty:").all() %}
        {% if page %}
          {% if craft.entries.id(page.id).relatedTo(department) | length or page.id == department.id %}
            <!-- Loading code snippet -->
            {{ department.departmentCodeSnippet | raw }}
          {% endif %}
        {% endif %}
      {% endfor %}
      {# Add Hubspot to Production Site #}
      <!-- Start of HubSpot Embed Code -->
      <script type="text/javascript" id="hs-script-loader" async defer src="//js.hs-scripts.com/20956996.js"></script>
      <!-- End of HubSpot Embed Code -->
    {% endif %}
  </body>
</html>
{% if section is defined and slug is defined %}
  {% set facetItem = craft.entries.section(section).slug(slug).one().title %}
  {% js at head %}
  var section = "{{ section }}";
      var entryTitle = "{{ facetItem }}";
  {% endjs %}
{% endif %}

{% js %}
(function() {
  // Observe DOM mutations whether the <html> node was changed by Google Translate
  if (window.MutationObserver) {
    var mutationObserver = new MutationObserver(function(mutations) {
      mutations.forEach(function (mutation) {
        var oldElementClass = mutation.oldValue;
        var currentElementClass = mutation.target.className;
        if (oldElementClass.indexOf('translated-') === -1 && currentElementClass.indexOf('translated-') > -1) {
          dl.push({
            'event' : 'page_translated',
            'translationLanguage' : mutation.target.lang || document.getElementsByTagName('html')[0].getAttribute('xml:lang'),
            'debug_mode'          : true,
          });
        }
    })
  })

    var htmlNode = document.querySelector('html');
    mutationObserver.observe(htmlNode, {
      attributes: true,
      attributeOldValue: true,
      attributeFilter: ['class']
    })
  }
})();
{% endjs %}