{"version":3,"sources":["webpack:///./src/js/radiogroup.js"],"names":["RadioGroup","groupNode","this","radioButtons","firstRadioButton","lastRadioButton","rbs","querySelectorAll","i","length","rb","tabIndex","setAttribute","addEventListener","handleKeydown","bind","handleClick","handleFocus","handleBlur","push","currentItem","focus","index","setChecked","indexOf","event","tgt","currentTarget","flag","key","setCheckedToPreviousItem","setCheckedToNextItem","stopPropagation","preventDefault","classList","add","remove","window","radios","document"],"mappings":"4SAWMA,E,WACJ,WAAYC,I,4FAAW,SACrBC,KAAKD,UAAYA,EAEjBC,KAAKC,aAAe,GAEpBD,KAAKE,iBAAmB,KACxBF,KAAKG,gBAAkB,KAIvB,IAFA,IAAIC,EAAMJ,KAAKD,UAAUM,iBAAiB,gBAEjCC,EAAI,EAAGA,EAAIF,EAAIG,OAAQD,IAAK,CACnC,IAAIE,EAAKJ,EAAIE,GAEbE,EAAGC,UAAY,EACfD,EAAGE,aAAa,eAAgB,SAEhCF,EAAGG,iBAAiB,UAAWX,KAAKY,cAAcC,KAAKb,OACvDQ,EAAGG,iBAAiB,QAASX,KAAKc,YAAYD,KAAKb,OACnDQ,EAAGG,iBAAiB,QAASX,KAAKe,YAAYF,KAAKb,OACnDQ,EAAGG,iBAAiB,OAAQX,KAAKgB,WAAWH,KAAKb,OAEjDA,KAAKC,aAAagB,KAAKT,GAElBR,KAAKE,mBACRF,KAAKE,iBAAmBM,GAE1BR,KAAKG,gBAAkBK,EAEzBR,KAAKE,iBAAiBO,SAAW,E,iDAGnC,SAAWS,GACT,IAAK,IAAIZ,EAAI,EAAGA,EAAIN,KAAKC,aAAaM,OAAQD,IAAK,CACjD,IAAIE,EAAKR,KAAKC,aAAaK,GAC3BE,EAAGE,aAAa,eAAgB,SAChCF,EAAGC,UAAY,EAEjBS,EAAYR,aAAa,eAAgB,QACzCQ,EAAYT,SAAW,EACvBS,EAAYC,U,sCAGd,SAAyBD,GACvB,IAAIE,EAEAF,IAAgBlB,KAAKE,iBACvBF,KAAKqB,WAAWrB,KAAKG,kBAErBiB,EAAQpB,KAAKC,aAAaqB,QAAQJ,GAClClB,KAAKqB,WAAWrB,KAAKC,aAAamB,EAAQ,O,kCAI9C,SAAqBF,GACnB,IAAIE,EAEAF,IAAgBlB,KAAKG,gBACvBH,KAAKqB,WAAWrB,KAAKE,mBAErBkB,EAAQpB,KAAKC,aAAaqB,QAAQJ,GAClClB,KAAKqB,WAAWrB,KAAKC,aAAamB,EAAQ,O,2BAM9C,SAAcG,GACZ,IAAIC,EAAMD,EAAME,cACdC,GAAO,EAET,OAAQH,EAAMI,KACZ,IAAK,IACL,IAAK,QACH3B,KAAKqB,WAAWG,GAChBE,GAAO,EACP,MAEF,IAAK,KACL,IAAK,UACL,IAAK,OACL,IAAK,YACH1B,KAAK4B,yBAAyBJ,GAC9BE,GAAO,EACP,MAEF,IAAK,OACL,IAAK,YACL,IAAK,QACL,IAAK,aACH1B,KAAK6B,qBAAqBL,GAC1BE,GAAO,EAOPA,IACFH,EAAMO,kBACNP,EAAMQ,oB,yBAIV,SAAYR,GACVvB,KAAKqB,WAAWE,EAAME,iB,yBAGxB,SAAYF,GACVA,EAAME,cAAcO,UAAUC,IAAI,W,wBAGpC,SAAWV,GACTA,EAAME,cAAcO,UAAUE,OAAO,c,gCAKzCC,OAAOxB,iBAAiB,QAAQ,WAE9B,IADA,IAAIyB,EAASC,SAAShC,iBAAiB,uBAC9BC,EAAI,EAAGA,EAAI8B,EAAO7B,OAAQD,IACjC,IAAIR,EAAWsC,EAAO9B,S","file":"/js/radiogroup.js","sourcesContent":["/*\n*   This content is licensed according to the W3C Software License at\n*   https://www.w3.org/Consortium/Legal/2015/copyright-software-and-document\n*\n*   File:   radio.js\n*\n*   Desc:   Radio group widget that implements ARIA Authoring Practices\n*/\n\n'use strict';\n\nclass RadioGroup {\n  constructor(groupNode) {\n    this.groupNode = groupNode;\n\n    this.radioButtons = [];\n\n    this.firstRadioButton = null;\n    this.lastRadioButton = null;\n\n    var rbs = this.groupNode.querySelectorAll('[role=radio]');\n\n    for (var i = 0; i < rbs.length; i++) {\n      var rb = rbs[i];\n\n      rb.tabIndex = -1;\n      rb.setAttribute('aria-checked', 'false');\n\n      rb.addEventListener('keydown', this.handleKeydown.bind(this));\n      rb.addEventListener('click', this.handleClick.bind(this));\n      rb.addEventListener('focus', this.handleFocus.bind(this));\n      rb.addEventListener('blur', this.handleBlur.bind(this));\n\n      this.radioButtons.push(rb);\n\n      if (!this.firstRadioButton) {\n        this.firstRadioButton = rb;\n      }\n      this.lastRadioButton = rb;\n    }\n    this.firstRadioButton.tabIndex = 0;\n  }\n\n  setChecked(currentItem) {\n    for (var i = 0; i < this.radioButtons.length; i++) {\n      var rb = this.radioButtons[i];\n      rb.setAttribute('aria-checked', 'false');\n      rb.tabIndex = -1;\n    }\n    currentItem.setAttribute('aria-checked', 'true');\n    currentItem.tabIndex = 0;\n    currentItem.focus();\n  }\n\n  setCheckedToPreviousItem(currentItem) {\n    var index;\n\n    if (currentItem === this.firstRadioButton) {\n      this.setChecked(this.lastRadioButton);\n    } else {\n      index = this.radioButtons.indexOf(currentItem);\n      this.setChecked(this.radioButtons[index - 1]);\n    }\n  }\n\n  setCheckedToNextItem(currentItem) {\n    var index;\n\n    if (currentItem === this.lastRadioButton) {\n      this.setChecked(this.firstRadioButton);\n    } else {\n      index = this.radioButtons.indexOf(currentItem);\n      this.setChecked(this.radioButtons[index + 1]);\n    }\n  }\n\n  /* EVENT HANDLERS */\n\n  handleKeydown(event) {\n    var tgt = event.currentTarget,\n      flag = false;\n\n    switch (event.key) {\n      case ' ':\n      case 'Enter':\n        this.setChecked(tgt);\n        flag = true;\n        break;\n\n      case 'Up':\n      case 'ArrowUp':\n      case 'Left':\n      case 'ArrowLeft':\n        this.setCheckedToPreviousItem(tgt);\n        flag = true;\n        break;\n\n      case 'Down':\n      case 'ArrowDown':\n      case 'Right':\n      case 'ArrowRight':\n        this.setCheckedToNextItem(tgt);\n        flag = true;\n        break;\n\n      default:\n        break;\n    }\n\n    if (flag) {\n      event.stopPropagation();\n      event.preventDefault();\n    }\n  }\n\n  handleClick(event) {\n    this.setChecked(event.currentTarget);\n  }\n\n  handleFocus(event) {\n    event.currentTarget.classList.add('focus');\n  }\n\n  handleBlur(event) {\n    event.currentTarget.classList.remove('focus');\n  }\n}\n\n// Initialize radio button group\nwindow.addEventListener('load', function () {\n  var radios = document.querySelectorAll('[role=\"radiogroup\"]');\n  for (var i = 0; i < radios.length; i++) {\n    new RadioGroup(radios[i]);\n  }\n});\n"],"sourceRoot":""}